server {

	listen 443 ssl; # handle ipv4
	listen [::]:443 ssl ipv6only=on;# handle piv6
	server_name mwen.42.fr;

	ssl_certificate /etc/nginx/ssl/mwen.pem;
	ssl_certificate_key /etc/nginx/ssl/mwen.key;
	ssl_protocols TLSv1.2 TLSv1.3;

	##serve static conetent
	# root /var/www/html;
	##plain text response
	# return 200 "Nginx is up and running ⁽⁽٩(๑˃̶͈̀ ᗨ ˂̶͈́)۶⁾⁾\n";

	#instructing NGINX to use the index.php file as root
	index index.php;

	#rewrite rules, sends everything through index.php and keeps the appended query string intact
	location / {
		try_files $uri $uri/ /index.php?q=$uri&$args;
	}
	#SECURITY : Deny all attempts to access PHP Files in the uploads directory
	location ~* /(?:uploads|files)/.*\.php$ {
		deny all;
	}
	#pass a request to a FastCGI service
	location ~ \.php$ {
		#SECURITY : Zero day Exploit Protection
		try_files $uri =404;
		#ENABLE : Enable PHP
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		include fastcgi_params;
		fastcgi_index index.php;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_pass inception:9000;
	}

	##serve static conetent
	#root /var/www/html;
	##plain text response
	# return 200 "Nginx is up and running ⁽⁽٩(๑˃̶͈̀ ᗨ ˂̶͈́)۶⁾⁾\n";

	##location match - prefix match
	location /mei {
		return 200 "$uri is a prefix match! Try any uri starting with /mei\n";
	}

	##location match - exact match
	location = /exactmei {
		return 200 "$uri is an exact match! Try adding an extra char to the uri\n";
	}

	##location match - regex match, has higher priority than prefix match
	location ~ /regexmei[0-9] {
		return 200 "$uri is a regex match! Try using a different number from 0-9 to the uri\n";
	}

	##location match - case insensitive
	location ~* /casemei {
		return 200 "$uri is case insensitive! Try using /CASEMEI as uri\n";
	}

	##location match - preferential prefix match
	location ^~ /meipreferred {
		return 200 "$uri is a preferred prefix match!\n";
	}

	##refirect
	location = /meiredirect {
		return 307 /meipreferred;
	}

	##rewrite, it changes the URI internally, without letting the user know. 	
	location = /meirewrite {
		rewrite /meirewrite /meipreferred;
	}
}
